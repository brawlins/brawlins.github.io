{"version":3,"sources":["webpack:///./src/utils/formatters.js","webpack:///./src/templates/singleTagIndex.js"],"names":["toSlug","title","slug","toLowerCase","replace","module","exports","formatDate","dateString","dateStyle","formattingOptions","Intl","DateTimeFormat","format","Date","getPathToPost","pluralize","number","singular","plural","pluralEnding","test","isNaN","Number","SingleTagTemplate","_ref","pageContext","posts","tagName","postCount","length","postCountString","___EmotionJSX","Layout","SEO","css","flexHeader","map","post","index","frontmatter","excerpt","fields","key","postWrapper","Link","to","name","styles"],"mappings":"8EAAA,SAASA,EAAOC,GACd,IAAIC,EAAO,GASX,OARID,IACFC,EAAOD,EACJE,cAEAC,QAAQ,UAAW,KAEnBA,QAAQ,UAAW,KAEjBF,EA4CTG,EAAOC,QAAU,CAAEN,SAAQO,WAzC3B,SAAoBC,EAAYC,QAAS,IAATA,MAAY,QAC1C,IAAIC,EAAoB,CAAED,aAC1B,OAAO,IAAIE,KAAKC,eAAe,QAASF,GAAmBG,OACzD,IAAIC,KAAKN,KAsC0BO,cAlCvC,SAAuBd,GACrB,MAAO,SAAWD,EAAOC,IAiC2Be,UAtBtD,SAAmBC,EAAQC,EAAUC,QAAM,IAANA,MAAS,MAE5C,IAAIC,EAAe,IASnB,OAPI,WAAWC,KAAKH,IAAa,WAAWG,KAAKH,MAC/CE,EAAe,MAGjBD,EAASA,GAAUD,EAAWE,GAGR,IAAlBE,MAAML,GACD,GAOS,KAHlBA,EAASM,OAAON,IAGMC,EAAWC,K,kCCnDnC,iFAsCeK,UA9BW,SAAHC,GAAyB,IAAnBC,EAAWD,EAAXC,YACnBC,EAAmBD,EAAnBC,MAAOC,EAAYF,EAAZE,QACXC,EAAYF,EAAMG,QAAU,EAC5BC,EAAkBF,EAAY,IAAMb,oBAAUa,EAAW,QAE7D,OACEG,YAACC,IAAM,KACLD,YAACE,IAAG,CAACjC,MAAK,IAAM2B,IAChBI,YAAA,OAAKG,IAAKC,GACRJ,YAAA,cAAMJ,GACNI,YAAA,YAAOD,IAERJ,GACCA,EAAMU,KAAI,SAACC,EAAMC,GACf,IAAMC,EAAiCF,EAAjCE,YAAaC,EAAoBH,EAApBG,QAASC,EAAWJ,EAAXI,OACtBzC,EAAUuC,EAAVvC,MACAC,EAASwC,EAATxC,KACN,OACE8B,YAAA,OAAKW,IAAKJ,EAAOJ,IAAKS,GACpBZ,YAAA,UACEA,YAACa,OAAI,CAACC,GAAI5C,GAAOD,IAEnB+B,YAAA,SAAIS,SAUlB,IAAML,EAAU,CAAAW,KAAA,UAAAC,OAAA,yGAOVJ,EAAW,CAAAG,KAAA,UAAAC,OAAA","file":"component---src-templates-single-tag-index-js-ce5b8974d24bb230b945.js","sourcesContent":["function toSlug(title) {\n  let slug = \"\"\n  if (title) {\n    slug = title\n      .toLowerCase()\n      // Separate words with hyphens\n      .replace(/[\\s.]+/g, \"-\")\n      // Remove unwanted characters\n      .replace(/[^\\w-]/g, \"\")\n  }\n  return slug\n}\n\nfunction formatDate(dateString, dateStyle = \"long\") {\n  let formattingOptions = { dateStyle }\n  return new Intl.DateTimeFormat(\"en-US\", formattingOptions).format(\n    new Date(dateString)\n  )\n}\n\nfunction getPathToPost(title) {\n  return \"/blog/\" + toSlug(title)\n}\n\n/**\n * Returns the singular or plural form based on the given number\n *\n * @param {Number} number - number\n * @param {String} singular - the singular form of the word\n * @param {String} plural - the plural form of the word\n * @returns {String}\n */\nfunction pluralize(number, singular, plural = null) {\n  // Define the default plural ending\n  let pluralEnding = 's';\n  // Handle notable exceptions\n  if (/(s|x|z)$/.test(singular) || /(ch|sh)$/.test(singular)) {\n    pluralEnding = 'es';\n  }\n  // If plural given, use it, otherwise add pluralEnding\n  plural = plural || singular + pluralEnding;\n\n  // Exit early if not a number\n  if (isNaN(number) === true) {\n    return '';\n  }\n\n  // Convert number string to number\n  number = Number(number);\n\n  // Return the correct form\n  return number === 1 ? singular : plural;\n}\n\nmodule.exports = { toSlug, formatDate, getPathToPost, pluralize }\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { css } from \"@emotion/core\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { pluralize } from \"../utils/formatters\"\n\nconst SingleTagTemplate = ({ pageContext }) => {\n  const { posts, tagName } = pageContext\n  let postCount = posts.length || 0\n  let postCountString = postCount + \" \" + pluralize(postCount, \"Post\")\n\n  return (\n    <Layout>\n      <SEO title={`#${tagName}`} />\n      <div css={flexHeader}>\n        <h1>#{tagName}</h1>\n        <span>{postCountString}</span>\n      </div>\n      {posts &&\n        posts.map((post, index) => {\n          let { frontmatter, excerpt, fields } = post\n          let { title } = frontmatter\n          let { slug } = fields\n          return (\n            <div key={index} css={postWrapper}>\n              <h2>\n                <Link to={slug}>{title}</Link>\n              </h2>\n              <p>{excerpt}</p>\n            </div>\n          )\n        })}\n    </Layout>\n  )\n}\n\nexport default SingleTagTemplate\n\nconst flexHeader = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 2.5em;\n`\nconst postWrapper = css`\n  margin-bottom: 2.5em;\n\n  h2 {\n    margin-top: 0;\n    margin-bottom: 10px;\n  }\n  p {\n    margin: 0;\n  }\n`\n"],"sourceRoot":""}