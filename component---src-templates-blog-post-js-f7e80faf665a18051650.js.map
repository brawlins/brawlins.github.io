{"version":3,"sources":["webpack:///./src/templates/blogPost.js"],"names":["_ref","name","styles","Template","_ref2","data","pageContext","next","prev","markdownRemark","frontmatter","html","title","date","tags","___EmotionJSX","Layout","SEO","css","className","dangerouslySetInnerHTML","__html","length","tagsWrapper","map","tagName","Link","key","to","navLinksWrapper","fields","slug"],"mappings":"2FAAA,qEAKmCA,EAAA,CAAAC,KAAA,SAAAC,OAAA,eAiEpBC,UA/DE,SAAHC,GAA+B,IAAzBC,EAAID,EAAJC,KAAMC,EAAWF,EAAXE,YAChBC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACNC,EAAmBJ,EAAnBI,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACbC,EAAsBF,EAAtBE,MAAOC,EAAeH,EAAfG,KAAMC,EAASJ,EAATI,KAErB,OACEC,YAACC,IAAM,KACLD,YAACE,IAAG,CAACL,MAAOA,IACZG,YAAA,WACEA,YAAA,UAAKH,GACLG,YAAA,KACEG,IAAGlB,GAIFa,GAEHE,YAAA,OAAKI,UAAU,WAAWC,wBAAyB,CAAEC,OAAQV,KAE5DG,EAAKQ,OACJP,YAAA,OAAKG,IAAKK,GACRR,YAAA,qBACCD,EAAKU,KAAI,SAAAC,GAAO,OACfV,YAACW,OAAI,CAACC,IAAKF,EAASG,GAAE,SAAWH,GAAU,IACvCA,OAIN,KACJV,YAAA,OAAKG,IAAKW,GACPrB,GACCO,YAACW,OAAI,CAACE,GAAIpB,EAAKsB,OAAOC,MAAK,KAChBvB,EAAKE,YAAYE,OAG7BL,GACCQ,YAACW,OAAI,CAACE,GAAIrB,EAAKuB,OAAOC,MACnBxB,EAAKG,YAAYE,MAAK,UA2BrC,IAAMW,EAAW,CAAAtB,KAAA,UAAAC,OAAA,+GAaX2B,EAAe,CAAA5B,KAAA,UAAAC,OAAA","file":"component---src-templates-blog-post-js-f7e80faf665a18051650.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { css } from \"@emotion/core\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Template = ({ data, pageContext }) => {\n  const { next, prev } = pageContext\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark\n  const { title, date, tags } = frontmatter\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <div>\n        <h1>{title}</h1>\n        <p\n          css={css`\n            color: #aaa;\n          `}\n        >\n          {date}\n        </p>\n        <div className=\"blogPost\" dangerouslySetInnerHTML={{ __html: html }} />\n\n        {tags.length ? (\n          <div css={tagsWrapper}>\n            <span>Tags:</span>\n            {tags.map(tagName => (\n              <Link key={tagName} to={`/tags/${tagName}`}>\n                #{tagName}\n              </Link>\n            ))}\n          </div>\n        ) : null}\n        <div css={navLinksWrapper}>\n          {prev && (\n            <Link to={prev.fields.slug}>\n              &laquo; {prev.frontmatter.title}\n            </Link>\n          )}\n          {next && (\n            <Link to={next.fields.slug}>\n              {next.frontmatter.title} &raquo;\n            </Link>\n          )}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($title: String!) {\n    markdownRemark(frontmatter: { title: { eq: $title } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"LL\")\n        tags\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n\nexport default Template\n\nconst tagsWrapper = css`\n  display: flex;\n  margin-top: 2em;\n  margin-bottom: 2em;\n\n  span {\n    font-weight: bold;\n    margin-right: 5px;\n  }\n  a {\n    margin-right: 10px;\n  }\n`\nconst navLinksWrapper = css`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1em;\n\n  a + a {\n    margin-left: 10px;\n  }\n`\n"],"sourceRoot":""}