{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/mysql-ssh-tunnel","result":{"data":{"markdownRemark":{"html":"<p>If your MySQL server is configured to only accept local connections, then you can't connect remotely by just specifying the hostname in your database connection. One work around is to create an SSH tunnel to the server so it looks like the connection is local. Here's how you can connect to a remote database from a local script:</p>\n<h2>1. Forward a local port to the server:</h2>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">ssh</span> -L <span class=\"token number\">3377</span>:localhost:3306 user@host</code></pre></div>\n<p>Now you have an SSH tunnel to the server. As long as your connection remains active, all traffic on local port 3377 (or whatever port number you chose) will be forwarded to the server on port 3306.</p>\n<h2>2. Use the forwarded port in your database connection:</h2>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// mysqli</span>\n<span class=\"token variable\">$db</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">mysqli</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'localhost:3377'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'database'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// pdo</span>\n<span class=\"token variable\">$db</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PDO</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'mysql:host=localhost:3377;dbname=database'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>That's it! Now you can query the database on the remote server from your local script.</p>","frontmatter":{"title":"MySQL SSH tunnel","date":"June 17, 2013","tags":["command line","mysql","php"]},"fields":{"slug":"/blog/mysql-ssh-tunnel"}}},"pageContext":{"title":"MySQL SSH tunnel","prev":{"frontmatter":{"title":"Limitations of WP_Query","tags":["php","wordpress"]},"excerpt":"I ran into one of the limitations of WP_Query recently when I realized it couldn't do a fairly simple query. Problem I wanted to get all the…","fields":{"slug":"/blog/limitations-of-wp_query"}},"next":{"frontmatter":{"title":"Tools for multiple monitors","tags":["apps","tools"]},"excerpt":"I love small focused apps that do one thing, and do it well. Here are a few that I discovered recently that come in handy when working on…","fields":{"slug":"/blog/tools-for-multiple-monitors"}}}},"staticQueryHashes":["3649515864","63159454"]}