{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/removing-unused-tags-in-wordpress","result":{"data":{"markdownRemark":{"html":"<p>Sometime you may need to mass delete a bunch of tags that are unused (or maybe only used once). I'm sure there are plugins for this, but then you're trusting someone else's SQL to do deletes on your database. It's just as easy to write your own queries.</p>\n<p>One of the quirks of MySQL, as stated in <a href=\"http://dev.mysql.com/doc/refman/5.1/en/delete.html\" target=\"_blank\">the manual</a>, is:</p>\n<blockquote>\n<p>Currently, you cannot delete from a table and select from the same table in a subquery.</p>\n</blockquote>\n<p>There are a few workarounds. One is to create a temporary table of the ID's you need to delete and then reference that in your delete query. Another is to write two nested select statements, using a buffer table with an alias to grab those same ID's, <a href=\"http://devwp.eu/deleting-wordpress-records-based-on-nested-selects/\" target=\"_blank\">as explained in this great write-up by Mario Peshev</a>.</p>\n<p>Because one of the tables you need to delete from has a compound key I ran into trouble using the second method, so I decided to go the temporary table route.</p>\n<h2>1. Create a temporary table</h2>\n<p>In my example I've selected all tags that are used 1 or 0 times.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- create temp table</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TEMPORARY</span> <span class=\"token keyword\">TABLE</span> to_delete\n<span class=\"token keyword\">SELECT</span> t<span class=\"token punctuation\">.</span>term_id<span class=\"token punctuation\">,</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>object_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> times_used<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>slug<span class=\"token punctuation\">,</span> tt<span class=\"token punctuation\">.</span>term_taxonomy_id<span class=\"token punctuation\">,</span> tt<span class=\"token punctuation\">.</span>taxonomy<span class=\"token punctuation\">,</span> tr<span class=\"token punctuation\">.</span>object_id\n<span class=\"token keyword\">FROM</span> wp_terms t\n<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> wp_term_taxonomy tt <span class=\"token keyword\">USING</span> <span class=\"token punctuation\">(</span>term_id<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> wp_term_relationships tr <span class=\"token keyword\">USING</span> <span class=\"token punctuation\">(</span>term_taxonomy_id<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> t<span class=\"token punctuation\">.</span>term_id\n<span class=\"token keyword\">HAVING</span> tt<span class=\"token punctuation\">.</span>taxonomy <span class=\"token operator\">=</span> <span class=\"token string\">\"post_tag\"</span>\n<span class=\"token operator\">AND</span> times_used <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> times_used</code></pre></div>\n<h2>2. Delete the terms</h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- delete unused terms</span>\n<span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> wp_terms\n<span class=\"token keyword\">WHERE</span> term_id <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">SELECT</span> term_id\n    <span class=\"token keyword\">FROM</span> to_delete\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>3. Delete associated records</h2>\n<p>There are two tables that have associated records. If we don't delete them too, we'll end up with orphaned records that reference non-existent terms.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- delete orphaned records</span>\n<span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> wp_term_taxonomy\n<span class=\"token keyword\">WHERE</span> term_taxonomy_id <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">SELECT</span> term_taxonomy_id\n    <span class=\"token keyword\">FROM</span> to_delete\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>This next one is the table where I ran into trouble because it has a compound key. If you simply delete all records with a matching <code class=\"language-text\">object_id</code>, then you'll end up removing <em>all</em> tags on the posts in question, not just the tags used once. You have to match on both <code class=\"language-text\">object_id</code> and <code class=\"language-text\">term_taxonomy_id</code>. Because of the quirk mentioned above, it ended up being easier to use the temporary table as a reference.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- delete orphaned records</span>\n<span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> tr\n<span class=\"token keyword\">USING</span> wp_term_relationships <span class=\"token keyword\">AS</span> tr\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> to_delete <span class=\"token keyword\">AS</span> d\n<span class=\"token keyword\">WHERE</span> d<span class=\"token punctuation\">.</span>term_taxonomy_id <span class=\"token operator\">=</span> tr<span class=\"token punctuation\">.</span>term_taxonomy_id\n<span class=\"token operator\">AND</span> d<span class=\"token punctuation\">.</span>object_id <span class=\"token operator\">=</span> tr<span class=\"token punctuation\">.</span>object_id</code></pre></div>\n<h2>4. Drop the temporary table</h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> to_delete</code></pre></div>","frontmatter":{"title":"Removing unused tags in Wordpress","date":"November 25, 2013","tags":["mysql","wordpress"]},"fields":{"slug":"/blog/removing-unused-tags-in-wordpress"}}},"pageContext":{"title":"Removing unused tags in Wordpress","prev":{"frontmatter":{"title":"Demo plugin for using WordPress Settings API","tags":["wordpress"]},"excerpt":"I spent a lot of time recently figuring out the Wordpress Settings API. Although there are still parts of it that remain shrouded in mystery…","fields":{"slug":"/blog/demo-plugin-for-using-wordpress-settings-api"}},"next":{"frontmatter":{"title":"The right way to do an ajax post in Wordpress","tags":["ajax","wordpress"]},"excerpt":"For a long time making ajax calls in Wordpress was very confusing to me. After reading the Codex and several articles about it, I think I…","fields":{"slug":"/blog/the-right-way-to-do-an-ajax-post-in-wordpress"}}}},"staticQueryHashes":["3649515864","63159454"]}