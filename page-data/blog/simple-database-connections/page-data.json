{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/simple-database-connections","result":{"data":{"markdownRemark":{"html":"<p>The other day I had to explain to someone how to connect to a MySQL database in PHP. It was a good reminder. Here's a simple example using two different API's.</p>\n<h2>1. Mysqli</h2>\n<p>The old MySQL extension is deprecated in favor of the <a href=\"http://php.net/manual/en/book.mysqli.php\" target=\"_blank\">MySQL Improved Extension</a>. This extension offers an object-oriented interface, but you can also use the procedural style like its predecessor. Mysqli also includes some more advanced features like prepared statements and stored procedures.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// connect to the database</span>\n<span class=\"token variable\">$mysqli</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">mysqli</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'localhost'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'database'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// make sure it worked</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$mysqli</span><span class=\"token operator\">-></span><span class=\"token property\">connect_error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Connection error: '</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$mysqli</span><span class=\"token operator\">-></span><span class=\"token property\">connect_error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// run a query</span>\n<span class=\"token variable\">$sql</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'SELECT * FROM my_table'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$mysqli</span><span class=\"token operator\">-></span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// loop through the rows</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token function\">fetch_assoc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// do something with $row</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// close the connection</span>\n<span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$mysqli</span><span class=\"token operator\">-></span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<h2>2. PDO</h2>\n<p>PDO stands for <a href=\"http://www.php.net/manual/en/book.pdo.php\" target=\"_blank\">PHP Data Objects</a> which is the latest and greatest data-access API. It includes drivers for many different databases (not just MySQL), so it's very portable. Although really, when was the last time you switched database systems? Probably never. PDO uses an object-oriented interface and also supports advanced features like prepared statements and stored procedures.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// connect to the database</span>\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$pdo</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PDO</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'mysql:host=localhost;dbname=database'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PDOException</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$e</span><span class=\"token operator\">-></span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// run a query</span>\n<span class=\"token variable\">$sql</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'SELECT * FROM my_table'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$pdo</span><span class=\"token operator\">-></span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">FETCH_ASSOC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// loop through the rows</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// do something with $row</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// close the connection</span>\n<span class=\"token variable\">$pdo</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>Of course there's a lot more you can do with either API, but that's a quick and dirty example :).</p>","frontmatter":{"title":"Simple Database Connections","date":"August 24, 2013","tags":["mysql","php"]},"fields":{"slug":"/blog/simple-database-connections"}}},"pageContext":{"title":"Simple Database Connections","prev":{"frontmatter":{"title":"Git branch workflow","tags":["command line","git"]},"excerpt":"I have three environments: local (development) test production Usually you want to try out a new feature and then test it out on the server…","fields":{"slug":"/blog/git-branch-workflow"}},"next":{"frontmatter":{"title":"Display an RSS feed using the Google Feed API","tags":["javascript"]},"excerpt":"Some time you may want to grab an RSS feed from another site and display it on yours. Here's how you can do it using the Google Feed API.…","fields":{"slug":"/blog/display-an-rss-feed-using-the-google-feed-api"}}}},"staticQueryHashes":["3649515864","63159454"]}