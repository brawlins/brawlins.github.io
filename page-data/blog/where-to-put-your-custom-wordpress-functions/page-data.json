{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/where-to-put-your-custom-wordpress-functions","result":{"data":{"markdownRemark":{"html":"<p>I found a great WordPress tip while reading some articles today. Often when you're trying to solve a problem you'll find code snippets in a tutorial or blog post somewhere, and they usually tell you to paste the code into your theme's <code class=\"language-text\">functions.php</code> file. While that works for the time being, it's probably not the best idea because as soon as you change your theme you'll lose that functionality too.</p>\n<p>A better idea is to write your own plugin that holds any custom functionality that is specific to your site and that also needs to be independent of whatever theme you choose. This goes by various names such as a \"<a href=\"http://www.wpbeginner.com/beginners-guide/what-why-and-how-tos-of-creating-a-site-specific-wordpress-plugin/\" target=\"_blank\">site-specific plugin</a>\", \"<a href=\"http://wpcandy.com/teaches/how-to-create-a-functionality-plugin/#.Ug1cwhbGky4\" target=\"_blank\">functionality plugin</a>\", or \"<a href=\"http://justintadlock.com/archives/2011/02/02/creating-a-custom-functions-plugin-for-end-users\" target=\"_blank\">custom functions plugin</a>\". The above links provide a good walk-through on how to write your plugin.</p>\n<p>Credit to Justin Tadlock for the additional tip of making it a \"<a href=\"http://justintadlock.com/archives/2011/02/02/creating-a-custom-functions-plugin-for-end-users\" target=\"_blank\">must-use plugin</a>\". Must-use plugins are automatically loaded so they don't have to be activated/deactivated. It's as simple as putting it in a new subfolder at <code class=\"language-text\">wp-content/mu-plugins</code> instead of <code class=\"language-text\">wp-content/plugins</code>.</p>","frontmatter":{"title":"Where to put your custom WordPress functions","date":"August 9, 2013","tags":["wordpress"]},"fields":{"slug":"/blog/where-to-put-your-custom-wordpress-functions"}}},"pageContext":{"title":"Where to put your custom WordPress functions","prev":{"frontmatter":{"title":"Display an RSS feed using the Google Feed API","tags":["javascript"]},"excerpt":"Some time you may want to grab an RSS feed from another site and display it on yours. Here's how you can do it using the Google Feed API.…","fields":{"slug":"/blog/display-an-rss-feed-using-the-google-feed-api"}},"next":{"frontmatter":{"title":"Import a database from the command line","tags":["command line","mysql"]},"excerpt":"Sometimes you need to import a large database that exceeds the size limits imposed by phpMyAdmin. You can change some settings in your php…","fields":{"slug":"/blog/import-a-database-from-the-command-line"}}}},"staticQueryHashes":["3649515864","63159454"]}