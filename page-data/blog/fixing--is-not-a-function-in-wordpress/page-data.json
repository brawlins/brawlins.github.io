{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/fixing--is-not-a-function-in-wordpress","result":{"data":{"markdownRemark":{"html":"<p>I couldn't figure out why I was getting this error on a Wordpress site the other day:</p>\n<blockquote>\n<p>Error: $ is not a function</p>\n</blockquote>\n<p>After searching a bit I found out that Wordpress loads jQuery in a \"no conflict\" mode by default, which means the <code class=\"language-text\">$</code> shortcut for jQuery is not available. Because other JavaScript libraries also use that shortcut, they disable it to avoid conflicts.</p>\n<p>The jQuery global variable is still available. However, if you want to use the <code class=\"language-text\">$</code> shortcut instead, you can pass it to your anonymous function like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">jQuery</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">$</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Code that uses jQuery's $ can follow here.</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>For more information see the documention on <a href=\"http://api.jquery.com/jQuery.noConflict/\" target=\"_blank\">jQuery.noConflict()</a>.</p>","frontmatter":{"title":"Fixing \"$ is not a function\" in Wordpress","date":"November 12, 2013","tags":["jquery","wordpress"]},"fields":{"slug":"/blog/fixing--is-not-a-function-in-wordpress"}}},"pageContext":{"title":"Fixing \"$ is not a function\" in Wordpress","prev":{"frontmatter":{"title":"The right way to do an ajax post in Wordpress","tags":["ajax","wordpress"]},"excerpt":"For a long time making ajax calls in Wordpress was very confusing to me. After reading the Codex and several articles about it, I think I…","fields":{"slug":"/blog/the-right-way-to-do-an-ajax-post-in-wordpress"}},"next":{"frontmatter":{"title":"Proper-casing names when they are stored in all caps","tags":["php"]},"excerpt":"Reformatting names is generally inadvisable, because no matter what you do you'll be wrong. Names don't follow rules consistently (or at all…","fields":{"slug":"/blog/proper-casing-names-when-they-are-stored-in-all-caps"}}}},"staticQueryHashes":["3649515864","63159454"]}