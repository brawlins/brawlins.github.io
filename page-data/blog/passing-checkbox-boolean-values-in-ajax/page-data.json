{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/passing-checkbox-boolean-values-in-ajax","result":{"data":{"markdownRemark":{"html":"<h2>Problem:</h2>\n<p>I was reminded today that JavaScript boolean values don't translate well to PHP. Here's an example.</p>\n<p>Say you have a form with a checkbox and you're submitting it via ajax to a PHP script. Using jQuery you can easily retrieve the value of the checkbox in your form:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> checked <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[name=\"my_checkbox\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token string\">':checked'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This returns either true or false, which works fine in JavaScript. However, when you send that over to PHP, it evaluates to a literal string (\"true\" or \"false\") rather than a boolean value. That breaks things on the PHP side because now when you check for the value in PHP...</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'my_checkbox'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>... it always returns TRUE, even when it's \"false\"! (The literal string \"false\" is not empty).</p>\n<h2>Solution:</h2>\n<p>You can either check for those strings on the PHP side:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'my_checkbox'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'my_checkbox'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'true'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Or, even better, you can convert it to a PHP-friendly value on the JavaScript side:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> checked <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[name=\"my_checkbox\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token string\">':checked'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Yeah. That's mo' betta.</p>","frontmatter":{"title":"Passing checkbox (boolean) values in ajax","date":"May 28, 2013","tags":["ajax","javascript","php"]},"fields":{"slug":"/blog/passing-checkbox-boolean-values-in-ajax"}}},"pageContext":{"title":"Passing checkbox (boolean) values in ajax","prev":{"frontmatter":{"title":"CSS background patterns","tags":["css"]},"excerpt":"CSS is getting more and more awesome all the time. The other day I discovered that you can create background patterns using the  property…","fields":{"slug":"/blog/css-background-patterns"}},"next":{"frontmatter":{"title":"Setting up dynamic virtual hosts on your Mac","tags":["apache","mac"]},"excerpt":"In the past I've always had to make two entries for every new site I add to my local development environment: a line in my hosts file (so…","fields":{"slug":"/blog/setting-up-dynamic-virtual-hosts-on-your-mac"}}}},"staticQueryHashes":["3649515864","63159454"]}